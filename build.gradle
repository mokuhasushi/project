
plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'jacoco'
}

//For arcgis
ext {
    arcgisVersion = '100.9.0'
}


repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/esri/arcgis/'
    }
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    mainClassName = ['unsw/gloriaromanus/GloriaRomanusApplication']
}

configurations {
    natives
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.0-rc1'
    compile group: 'com.esri.arcgisruntime', name: 'arcgis-java', version: '100.9.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0-rc1'
    compile group: 'de.grundid.opendatalab', name: 'geojson-jackson', version: '1.14'
    compile group: 'org.json', name: 'json', version: '20200518'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
//    runtime group: 'com.esri.arcgisruntime', name: 'arcgis-java', version: '100.9.0'
//    runtime 'arcgis-runtime-sdk-java-100.9.0/libs/arcgis-java-api.jar'
    natives "com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion"
    natives "com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion"
}
task copyNatives(type: Copy) {
    description = "Copies the arcgis native libraries into the .arcgis directory for development."
    group = "build"
    configurations.natives.asFileTree.each {
        from(zipTree(it))
    }
    into "${System.properties.getProperty("user.home")}/.arcgis/$arcgisVersion"
}
application {
    mainClassName = 'unsw.gloriaromanus.GloriaRomanusLauncher'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    afterEvaluate{
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/unsw/gloriaromanus/GloriaRomanus*',
                                        '**/unsw/gloriaromanus/MainTextual*'])
        }))
    }
}
sourceSets {
    main {
        java {
            srcDirs = ['src']
            excludes = ['test/*']
        }

    }
    test {
        java {
            srcDirs = ['src']
            excludes = ['unsw/gloriaromanus/*']
        }
    }
}

task copyFXML(type: Copy) {
    from 'src/unsw/gloriaromanus/main.fxml'
    into 'build/resources/main/unsw/gloriaromanus/'
}
task copyCSS(type: Copy){
    from 'src/unsw/gloriaromanus/style.css'
    into 'build/resources/main/'
}
